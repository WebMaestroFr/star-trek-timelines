{"version":3,"sources":["context/stats/index.ts","components/Skill.tsx","components/Crew/Level.tsx","components/Icon.tsx","components/Crew/Rarity.tsx","components/Crew/index.tsx","context/navigation/index.ts","utils/index.ts","components/Form/index.tsx","components/Form/Modal.tsx","types/json.validator.ts","components/Form/Debounce.tsx","context/navigation/Provider.tsx","context/player/index.ts","context/player/Provider.tsx","context/stats/Provider.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["StatsContext","createContext","useContext","SkillProgress","core","current","max","range_max","range_min","props","skillMax","ProgressBar","variant","now","Skill","active","skill","skillName","STATS","useStats","bestSkills","playerBestSkills","title","getSkillTitle","className","CrewRarity","skillsProgress","Icon","name","icon","faCheck","faSquare","faCheckSquare","faTimes","faStar","faUsers","console","warn","getIconFromName","classNames","fixedWidth","maxRarity","rarity","Array","map","_","key","Crew","crew","Card","max_rarity","inactive","undefined","height","offset","Img","src","Body","Title","Text","as","Object","entries","max_skills","base_skills","defaultNavigation","filter","NavigationContext","fromEntries","iterable","reduce","obj","val","sanitizeFilename","filename","toLowerCase","replace","FormValid","children","disabled","onValidSubmit","useState","validated","setValidated","Form","noValidate","onSubmit","event","form","currentTarget","isValid","checkValidity","preventDefault","stopPropagation","formData","prototype","call","elements","data","multiple","options","value","actualValue","HTMLOptionsCollection","option","selected","optionsArray","invalid","querySelector","focus","FormModal","loading","onHide","show","Modal","size","Header","closeButton","Spinner","animation","Footer","Button","onClick","type","ajv","Ajv","allErrors","coerceTypes","format","nullable","unicode","uniqueItems","useDefaults","addMetaSchema","require","isPlayerJSON","compile","$schema","defaultProperties","properties","action","enum","player","character","items","additionalProperties","display_name","required","dbid","id","FormDebounce","delay","onChange","changeEvent","setChangeEvent","useEffect","timeoutID","setTimeout","clearTimeout","FormControl","persist","scrollEvent","CustomEvent","NavigationProvider","onClickImport","playerName","setFilter","Provider","Navbar","bg","expand","inline","sanitizedValue","target","window","dispatchEvent","placeholder","Brand","PlayerContext","PlayerProvider","playerCache","localStorage","getItem","setInvalid","setLoading","JSON","parse","setPlayer","setShow","handleJson","useCallback","playerJson","nextPlayer","Error","errorsText","errors","e","keyword","dataVar","inspect","validate","setItem","error","errorString","toString","removeItem","Group","controlId","Label","href","rel","Control","onPaste","clipboardData","getData","rows","isBetterSkill","bestSkill","Boolean","getBestCrew","best","keys","b","s","bestCrew","getPlayerBestCrew","getSkillAvg","getSkillsSum","skills","values","sum","avg","StatsProvider","PLAYER","stats","setStats","CREW","playerBestCrew","toDiffSkills","diffSkills","bestSkillAvg","playerBestSkill","playerBestSkillAvg","skillAvg","diffSkillsValues","diffSkillsAvg","diff","length","find","currentSkillsSum","maxSkillsSum","Math","min","sort","a","aComplete","pow","bComplete","AppCrew","NAVIGATION","dataCrew","Row","includes","Col","sm","md","lg","App","Container","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fea2cd18.chunk.js","sourcesContent":["import { createContext, useContext } from \"react\";\n\nexport const StatsContext = createContext<Stats | null>(null);\n\nexport default () => useContext(StatsContext);\n","import React, { FC } from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\n\nimport useStats from \"../context/stats\";\n\nconst getSkillTitle = (skillName: string) => {\n  switch (skillName) {\n    case \"command_skill\":\n      return \"Command\";\n    case \"diplomacy_skill\":\n      return \"Diplomacy\";\n    case \"engineering_skill\":\n      return \"Engineering\";\n    case \"medicine_skill\":\n      return \"Medicine\";\n    case \"science_skill\":\n      return \"Science\";\n    case \"security_skill\":\n      return \"Security\";\n    default:\n      return skillName;\n  }\n};\n\nconst SkillProgress: FC<{\n  core: number;\n  current: Skill | undefined;\n  max: Skill | undefined;\n  range_max: number;\n  range_min: number;\n}> = ({ core, current, max, range_max, range_min, ...props }) => {\n  const skillMax = max ? max.core + max.range_max : core + range_max;\n  return (\n    <ProgressBar {...props}>\n      <ProgressBar\n        variant=\"success\"\n        now={((core + range_min) / skillMax) * 100}\n      />\n      <ProgressBar\n        variant=\"warning\"\n        now={((range_max - range_min) / skillMax) * 100}\n      />\n      {current ? (\n        <ProgressBar\n          variant=\"danger\"\n          now={\n            current.core + current.range_max > core + range_max\n              ? ((current.core + current.range_max - (core + range_max)) /\n                  skillMax) *\n                100\n              : 0\n          }\n        />\n      ) : null}\n    </ProgressBar>\n  );\n};\n\nconst Skill: FC<{\n  active?: Skills | null;\n  skill: Skill;\n  skillName: SkillName;\n}> = ({ active, skill, skillName }) => {\n  const STATS = useStats();\n  if (STATS === null) {\n    return null;\n  }\n  const { bestSkills, playerBestSkills } = STATS;\n  const title = getSkillTitle(skillName);\n  return (\n    <div className=\"Skill\">\n      <span className=\"Skill-label\">\n        <strong>{title}</strong>\n        <span>\n          {skill.core}&nbsp;\n          <small>\n            ({skill.range_min}-{skill.range_max})\n          </small>\n        </span>\n      </span>\n      {active ? (\n        <SkillProgress\n          className=\"Skill-active\"\n          current={playerBestSkills && (playerBestSkills as any)[skillName]}\n          max={bestSkills && (bestSkills as any)[skillName]}\n          {...(active as any)[skillName]}\n        />\n      ) : null}\n      <SkillProgress\n        current={playerBestSkills && (playerBestSkills as any)[skillName]}\n        max={bestSkills && (bestSkills as any)[skillName]}\n        {...skill}\n      />\n    </div>\n  );\n};\n\nexport default Skill;\n","import React, { FC } from \"react\";\nimport { ProgressBar } from \"react-bootstrap\";\n\nconst CrewRarity: FC<{ skillsProgress: number }> = ({ skillsProgress }) => (\n  <ProgressBar className=\"CrewLevel\" now={skillsProgress * 100} />\n);\n\nexport default CrewRarity;\n","import {\n  faCheck,\n  faCheckSquare,\n  faSquare,\n  faStar,\n  faTimes,\n  faUsers\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport classNames from \"classnames\";\nimport React, { FC, HTMLProps } from \"react\";\n\n// IF YOU'RE WORKING ON THIS FILE, PLEASE READ THIS FIRST:\n// https://fontawesome.com/icons?d=gallery&s=solid&m=free\n\nconst getIconFromName = (name: string) => {\n  switch (name) {\n    case \"check\":\n      return faCheck;\n    case \"check-off\":\n      return faSquare;\n    case \"check-on\":\n      return faCheckSquare;\n    case \"close\":\n      return faTimes;\n    case \"star\":\n      return faStar;\n    case \"users\":\n      return faUsers;\n    default:\n      console.warn(`Icon \"${name}\" not imported.`);\n      return null;\n  }\n};\n\nconst Icon: FC<HTMLProps<HTMLSpanElement> & { name: string }> = ({\n  className,\n  name,\n  ...props\n}) => {\n  const icon = getIconFromName(name);\n  return (\n    icon && (\n      <span className={classNames(\"Icon\", className)} {...props}>\n        <FontAwesomeIcon fixedWidth={true} icon={icon} />\n      </span>\n    )\n  );\n};\n\nexport default Icon;\n","import React, { FC } from \"react\";\n\nimport Icon from \"../Icon\";\n\nconst CrewRarity: FC<{ maxRarity: number; rarity?: number | null }> = ({\n  maxRarity,\n  rarity\n}) => {\n  if (rarity) {\n    return (\n      <span className=\"CrewRarity\">\n        {[...Array(rarity)].map((_, key) => (\n          <Icon className=\"active\" name=\"star\" key={key} />\n        ))}\n        {[...Array(maxRarity - rarity)].map((_, key) => (\n          <Icon className=\"inactive\" name=\"star\" key={key} />\n        ))}\n      </span>\n    );\n  }\n  return (\n    <span className=\"CrewRarity\">\n      {[...Array(maxRarity)].map((_, key) => (\n        <Icon className=\"inactive\" name=\"star\" key={key} />\n      ))}\n    </span>\n  );\n};\n\nexport default CrewRarity;\n","import classNames from \"classnames\";\nimport React, { FC } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport LazyLoad from \"react-lazyload\";\n\nimport SkillProgress from \"../Skill\";\nimport CrewLevel from \"./Level\";\nimport CrewRarity from \"./Rarity\";\n\nconst Crew: FC<{ crew: StatsCrew }> = ({ crew: { active, ...crew } }) => {\n  return (\n    <Card\n      className={classNames(\"Crew\", `rarity-${crew.max_rarity}`, {\n        active,\n        inactive: active === undefined\n      })}\n    >\n      <LazyLoad height={500} offset={750}>\n        <Card.Img variant=\"top\" src={`./crew/${crew.key}.png`} />\n        <Card.Body>\n          <CrewRarity\n            maxRarity={crew.max_rarity}\n            rarity={active && active.rarity}\n          />\n          <CrewLevel skillsProgress={crew.skillsProgress} />\n          <Card.Title>{crew.name}</Card.Title>\n          <Card.Text as=\"div\">\n            {Object.entries(crew.max_skills).map(([skillName, skill]) => (\n              <SkillProgress\n                active={active && active.base_skills}\n                key={skillName}\n                skill={skill}\n                skillName={skillName as SkillName}\n              />\n            ))}\n          </Card.Text>\n        </Card.Body>\n      </LazyLoad>\n    </Card>\n  );\n};\n\nexport default Crew;\n","import { createContext, useContext } from \"react\";\n\nexport const defaultNavigation = { filter: \"\" };\n\nexport const NavigationContext = createContext<{ filter: string }>(\n  defaultNavigation\n);\n\nexport default () => useContext(NavigationContext);\n","export const fromEntries = (iterable: [string, any][]) =>\n  [...iterable].reduce((obj, [key, val]) => ({ ...obj, [key]: val }), {});\n\nexport const optionsArray = (options: HTMLOptionsCollection) =>\n  // Use Array functions on HTMLOptionsCollection\n  Array.prototype.filter.call(\n    options,\n    (option: HTMLOptionElement) => option.selected\n  );\n\nexport const sanitizeFilename = (filename?: string) =>\n  filename\n    ? filename\n        .toLowerCase()\n        .replace(/[^a-z0-9]/gi, \"-\")\n        .replace(/-+/g, \"-\")\n        .replace(/^-|-$/g, \"\")\n    : \"\";\n","import classNames from \"classnames\";\nimport React, { FC, FormEvent, useState } from \"react\";\nimport { Form, FormProps } from \"react-bootstrap\";\n\nimport { optionsArray } from \"../../utils\";\n\nconst FormValid: FC<FormProps & {\n  className: string;\n  disabled?: boolean;\n  onSubmit?: undefined;\n  onValidSubmit: (data: any, form: HTMLFormElement) => void;\n}> = ({ children, className, disabled, onValidSubmit, ...props }) => {\n  const [validated, setValidated] = useState<boolean>(false);\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    const form = event.currentTarget;\n    const isValid = form.checkValidity();\n    event.preventDefault();\n    event.stopPropagation();\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/elements\n    const formData = Array.prototype.reduce.call(\n      form.elements,\n      (data: any, { multiple, name, options, value }: HTMLFormElement) => {\n        const actualValue =\n          multiple && options instanceof HTMLOptionsCollection\n            ? optionsArray(options).map(\n                (option: HTMLOptionElement) => option.value\n              )\n            : value;\n        return name === \"\"\n          ? data\n          : {\n              [name]: actualValue,\n              ...data\n            };\n      },\n      {}\n    );\n    // console.warn({ formData });\n    if (isValid) {\n      onValidSubmit(formData, form);\n    } else {\n      const invalid: HTMLElement | null = form.querySelector(\":invalid\");\n      if (invalid) {\n        invalid.focus();\n      }\n    }\n    setValidated(true);\n  };\n\n  return (\n    <Form\n      className={classNames(\n        \"FormValid\",\n        className,\n        disabled && \"FormValid-disabled\"\n      )}\n      noValidate={true}\n      onSubmit={handleSubmit}\n      validated={validated}\n      {...props}\n    >\n      {children}\n    </Form>\n  );\n};\n\nexport default FormValid;\n","import classNames from \"classnames\";\nimport React, { FC } from \"react\";\nimport { Button, Modal, ModalProps, Spinner } from \"react-bootstrap\";\n\nimport Icon from \"../Icon\";\nimport FormValid from \"./index\";\n\nconst FormModal: FC<ModalProps & {\n  className: string;\n  loading?: boolean;\n  onHide: () => void;\n  onValidSubmit: (data: any, form: HTMLFormElement) => void;\n  show: boolean;\n  title: string;\n}> = ({\n  children,\n  className,\n  loading,\n  onHide,\n  onValidSubmit,\n  show,\n  title,\n  ...props\n}) => (\n  <Modal size=\"lg\" show={show} onHide={onHide} {...props}>\n    <FormValid\n      className={classNames(\"FormModal\", className)}\n      onValidSubmit={onValidSubmit}\n    >\n      <Modal.Header closeButton={true}>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      {loading ? (\n        <Modal.Body className=\"text-center\">\n          <Spinner animation=\"border\" variant=\"light\" />\n        </Modal.Body>\n      ) : (\n        <Modal.Body>{children}</Modal.Body>\n      )}\n      <Modal.Footer>\n        <Button disabled={loading} onClick={onHide} variant=\"outline-secondary\">\n          <Icon name=\"close\" /> Cancel\n        </Button>\n        <Button disabled={loading} type=\"submit\" variant=\"secondary\">\n          <Icon name=\"check\" /> {title}\n        </Button>\n      </Modal.Footer>\n    </FormValid>\n  </Modal>\n);\n\nexport default FormModal;\n","/* tslint:disable */\n// generated by typescript-json-validator\nimport { inspect } from \"util\";\nimport Ajv from \"ajv\";\nimport PlayerJSON from \"./json\";\nexport const ajv = new Ajv({\n  allErrors: true,\n  coerceTypes: false,\n  format: \"fast\",\n  nullable: true,\n  unicode: true,\n  uniqueItems: true,\n  useDefaults: true\n});\n\najv.addMetaSchema(require(\"ajv/lib/refs/json-schema-draft-06.json\"));\n\nexport const PlayerJSONSchema = {\n  $schema: \"http://json-schema.org/draft-07/schema#\",\n  defaultProperties: [],\n  properties: {\n    action: {\n      enum: [\"update\"],\n      type: \"string\"\n    },\n    player: {\n      defaultProperties: [],\n      properties: {\n        character: {\n          defaultProperties: [],\n          properties: {\n            crew: {\n              items: {\n                additionalProperties: true,\n                properties: {},\n                type: \"object\"\n              },\n              type: \"array\"\n            },\n            display_name: {\n              type: \"string\"\n            }\n          },\n          required: [\"crew\", \"display_name\"],\n          type: \"object\"\n        },\n        dbid: {\n          type: \"number\"\n        },\n        id: {\n          type: \"number\"\n        }\n      },\n      required: [\"character\", \"dbid\", \"id\"],\n      type: \"object\"\n    }\n  },\n  required: [\"action\", \"player\"],\n  type: \"object\"\n};\nexport type ValidateFunction<T> = ((data: unknown) => data is T) &\n  Pick<Ajv.ValidateFunction, \"errors\">;\nexport const isPlayerJSON = ajv.compile(PlayerJSONSchema) as ValidateFunction<\n  PlayerJSON\n  >;\nexport default function validate(value: unknown): PlayerJSON {\n  if (isPlayerJSON(value)) {\n    return value;\n  } else {\n    throw new Error(\n      ajv.errorsText(\n        isPlayerJSON.errors!.filter((e: any) => e.keyword !== \"if\"),\n        { dataVar: \"PlayerJSON\" }\n      ) +\n      \"\\n\\n\" +\n      inspect(value)\n    );\n  }\n}\n","import React, { ChangeEvent, FC, useEffect, useState } from \"react\";\nimport { FormControl, FormControlProps } from \"react-bootstrap\";\n\ntype FormControlChangeEvent = ChangeEvent<\n  HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n>;\n\nconst FormDebounce: FC<FormControlProps & {\n  delay?: number;\n  onChange?: (event: FormControlChangeEvent) => void;\n  placeholder?: string;\n}> = ({ delay = 400, onChange, ...props }) => {\n  const [changeEvent, setChangeEvent] = useState<FormControlChangeEvent>();\n  useEffect(() => {\n    if (onChange && changeEvent) {\n      const timeoutCallback = () => onChange(changeEvent);\n      const timeoutID = setTimeout(timeoutCallback, delay);\n      return () => clearTimeout(timeoutID);\n    }\n  }, [delay, onChange, changeEvent]);\n  const handleChange = (event: FormControlChangeEvent) => {\n    event.persist();\n    setChangeEvent(event);\n  };\n  return <FormControl onChange={handleChange} {...props} />;\n};\n\nexport default FormDebounce;\n","import React, { ChangeEvent, FC, MouseEvent, useState } from \"react\";\nimport { Button, Form, Navbar } from \"react-bootstrap\";\n\nimport FormDebounce from \"../../components/Form/Debounce\";\nimport Icon from \"../../components/Icon\";\nimport { sanitizeFilename } from \"../../utils\";\nimport { defaultNavigation, NavigationContext } from \"./index\";\n\nconst scrollEvent = new CustomEvent(\"scroll\");\n\nconst NavigationProvider: FC<{\n  onClickImport: (event: MouseEvent<HTMLButtonElement>) => void;\n  playerName: string | null;\n}> = ({ children, onClickImport, playerName }) => {\n  const [filter, setFilter] = useState<string>(defaultNavigation.filter);\n  const handleChangeFilter = (\n    event: ChangeEvent<\n      HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement\n    >\n  ) => {\n    const sanitizedValue = sanitizeFilename(event.target.value).replace(\n      /-/g,\n      \"\"\n    );\n    setFilter(sanitizedValue);\n    window.dispatchEvent(scrollEvent);\n  };\n\n  return (\n    <NavigationContext.Provider value={{ filter }}>\n      <Navbar bg=\"dark\" className=\"Navigation\" expand=\"lg\" variant=\"dark\">\n        <Form inline={true}>\n          <FormDebounce onChange={handleChangeFilter} placeholder=\"Filter...\" />\n        </Form>\n        <Navbar.Brand className=\"ml-auto\">\n          {playerName || (\n            <>\n              <abbr title=\"Star Trek Timelines\">STT</abbr> Airlockizer 3000\n            </>\n          )}\n          <Button className=\"ml-3\" onClick={onClickImport} variant=\"secondary\">\n            <Icon name=\"users\" /> Import...\n          </Button>\n        </Navbar.Brand>\n      </Navbar>\n      {children}\n    </NavigationContext.Provider>\n  );\n};\n\nexport default NavigationProvider;\n","import { createContext, useContext } from \"react\";\n\nexport const PlayerContext = createContext<Player | null>(null);\n\nexport default () => useContext(PlayerContext);\n","import React, { ClipboardEvent, FC, useCallback, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nimport FormModal from \"../../components/Form/Modal\";\nimport validate from \"../../types/json.validator\";\nimport NavigationProvider from \"../navigation/Provider\";\nimport { PlayerContext } from \"./index\";\n\nconst PlayerProvider: FC = ({ children }) => {\n  const playerCache = localStorage.getItem(\"player\");\n  const [invalid, setInvalid] = useState<string>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [player, setPlayer] = useState<Player | null>(\n    playerCache && JSON.parse(playerCache)\n  );\n  const [show, setShow] = useState(false);\n  const handleJson = useCallback(playerJson => {\n    try {\n      const nextPlayer = JSON.parse(playerJson);\n      validate(nextPlayer);\n      localStorage.setItem(\"player\", playerJson);\n      setPlayer(nextPlayer);\n      setShow(false);\n      window.setTimeout(() => {\n        setInvalid(undefined);\n        setLoading(false);\n      }, 400);\n    } catch (error) {\n      const errorString = error.toString();\n      localStorage.removeItem(\"player\");\n      setInvalid(errorString);\n      setLoading(false);\n    }\n  }, []);\n  const handlePaste = (event: ClipboardEvent<HTMLTextAreaElement>) => {\n    setLoading(true);\n    const clipboardData = event.clipboardData || (window as any).clipboardData;\n    const playerJson = clipboardData && clipboardData.getData(\"Text\");\n    if (playerJson) {\n      event.stopPropagation();\n      event.preventDefault();\n      window.setTimeout(() => handleJson(playerJson), 100);\n    }\n  };\n  const handleSubmit = ({ playerJson }: { playerJson: string }) => {\n    setLoading(true);\n    window.setTimeout(() => handleJson(playerJson), 100);\n  };\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <PlayerContext.Provider value={player}>\n      <FormModal\n        className=\"Player-modal\"\n        loading={loading}\n        onHide={handleClose}\n        onValidSubmit={handleSubmit}\n        show={show}\n        title=\"Import Player Profile\"\n      >\n        <Form.Group controlId=\"playerJson\">\n          <Form.Label className=\"Player-label\">\n            <span>\n              Log into, load and copy all raw data from{\" \"}\n              <a\n                href=\"https://stt.disruptorbeam.com/player?client_api=12\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                https://stt.disruptorbeam.com/player\n              </a>\n              .\n            </span>\n          </Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            name=\"playerJson\"\n            onPaste={handlePaste}\n            placeholder={invalid || \"Paste raw JSON data here.\"}\n            required={true}\n            rows={5}\n          />\n        </Form.Group>\n      </FormModal>\n      <NavigationProvider\n        onClickImport={handleShow}\n        playerName={player && player.player.character.display_name}\n      >\n        {children}\n      </NavigationProvider>\n    </PlayerContext.Provider>\n  );\n};\n\nexport default PlayerProvider;\n","import React, { FC, useEffect, useState } from \"react\";\n\nimport { fromEntries } from \"../../utils\";\nimport { sanitizeFilename } from \"../../utils\";\nimport CREW from \"../../__data__/crew.json\";\nimport usePlayer from \"../player\";\nimport { StatsContext } from \"./index\";\n\nconst isBetterSkill = (\n  bestSkill: Skill | undefined,\n  skill: Skill | undefined\n) =>\n  Boolean(\n    skill &&\n      (!bestSkill ||\n        bestSkill.core + bestSkill.range_max < skill.core + skill.range_max)\n  );\n\nconst getBestCrew = (best: SkillsCrew, crew: DataCrew) =>\n  Object.keys(crew.max_skills).reduce((b, s) => {\n    const bestCrew = (best as any)[s];\n    const bestSkill = bestCrew && bestCrew.max_skills[s];\n    const skill = (crew.max_skills as any)[s] as Skill | undefined;\n    return isBetterSkill(bestSkill, skill) ? { ...b, [s]: crew } : b;\n  }, best) as SkillsCrew;\n\nconst getPlayerBestCrew = (best: SkillsPlayerCrew, crew: PlayerCrew) =>\n  Object.keys(crew.base_skills).reduce((b, s) => {\n    const bestCrew = (best as any)[s];\n    const bestSkill = bestCrew && bestCrew.base_skills[s];\n    const skill = (crew.base_skills as any)[s] as Skill | undefined;\n    return isBetterSkill(bestSkill, skill) ? { ...b, [s]: crew } : b;\n  }, best) as SkillsPlayerCrew;\n\nconst getSkillAvg = (skill: Skill | undefined) =>\n  skill && skill.core + (skill.range_max + skill.range_min) / 2;\n\nconst getSkillsSum = (skills: Skills) =>\n  Object.values(skills).reduce<number>((sum: number, skill: Skill) => {\n    const avg = getSkillAvg(skill);\n    return avg ? sum + avg : 0;\n  }, 0);\n\nconst StatsProvider: FC = ({ children }) => {\n  const PLAYER = usePlayer();\n  const [stats, setStats] = useState<Stats | null>(null);\n  useEffect(() => {\n    const bestCrew = CREW.reduce(getBestCrew, {});\n    const playerBestCrew = PLAYER\n      ? PLAYER.player.character.crew.reduce(getPlayerBestCrew, {})\n      : {};\n    const bestSkills = fromEntries(\n      Object.entries(bestCrew as SkillsCrew).map(\n        ([s, crew]) => [s, crew.max_skills[s]] as [SkillName, Skill]\n      )\n    ) as Skills;\n    const playerBestSkills = fromEntries(\n      Object.entries(playerBestCrew as SkillsPlayerCrew).map(\n        ([s, crew]) => [s, crew.base_skills[s]] as [SkillName, Skill]\n      )\n    ) as Skills;\n    const toDiffSkills = (\n      diffSkills: DiffSkills,\n      [skillName, skill]: [string, Skill | undefined]\n    ) => {\n      if (skill === undefined) {\n        return diffSkills;\n      }\n      const bestSkill = (bestSkills as any)[skillName] as Skill | undefined;\n      const bestSkillAvg = getSkillAvg(bestSkill);\n      const playerBestSkill = (playerBestSkills as any)[skillName] as\n        | Skill\n        | undefined;\n      const playerBestSkillAvg = getSkillAvg(playerBestSkill);\n      const skillAvg = getSkillAvg(skill);\n      return playerBestSkillAvg && skillAvg && bestSkillAvg\n        ? {\n            ...diffSkills,\n            [skillName]: 1 + (playerBestSkillAvg - skillAvg) / bestSkillAvg\n          }\n        : diffSkills;\n    };\n    setStats({\n      bestCrew,\n      bestSkills,\n      crew: CREW.map(crew => {\n        const diffSkills = Object.entries(crew.max_skills).reduce<DiffSkills>(\n          toDiffSkills,\n          {} as DiffSkills\n        );\n        const diffSkillsValues = Object.values(diffSkills);\n        const diffSkillsAvg =\n          diffSkillsValues.reduce<number>((sum, diff) => sum + diff, 0) /\n          diffSkillsValues.length;\n        const active = PLAYER\n          ? PLAYER.player.character.crew.find(\n              ({ name }) => sanitizeFilename(name) === crew.key\n            )\n          : null;\n        const currentSkillsSum = active ? getSkillsSum(active.base_skills) : 0;\n        const maxSkillsSum = getSkillsSum(crew.max_skills);\n        const skillsProgress = currentSkillsSum\n          ? Math.min(currentSkillsSum / maxSkillsSum, 1)\n          : 0;\n        return {\n          ...crew,\n          active,\n          currentSkillsSum,\n          diffSkills,\n          diffSkillsAvg,\n          maxSkillsSum,\n          skillsProgress\n        };\n      })\n        .sort((a, b) => {\n          const aComplete = a.active\n            ? Math.pow(a.skillsProgress, 1 + a.max_rarity - a.active.rarity)\n            : 1;\n          const bComplete = b.active\n            ? Math.pow(b.skillsProgress, 1 + b.max_rarity - b.active.rarity)\n            : 1;\n          return a.diffSkillsAvg / aComplete - b.diffSkillsAvg / bComplete;\n        })\n        .sort((a, b) =>\n          a.skillsProgress === b.skillsProgress\n            ? 0\n            : a.skillsProgress === 1\n            ? 1\n            : -1\n        )\n        .sort((a, b) => (!a.active === !b.active ? 0 : a.active ? -1 : 1)),\n      playerBestCrew,\n      playerBestSkills\n    });\n  }, [PLAYER]);\n  return (\n    <StatsContext.Provider value={stats}>{children}</StatsContext.Provider>\n  );\n};\n\nexport default StatsProvider;\n","import React, { FC } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nimport \"./App.scss\";\n\nimport CrewCard from \"./components/Crew\";\nimport useNavigation from \"./context/navigation\";\nimport PlayerProvider from \"./context/player/Provider\";\nimport useStats from \"./context/stats\";\nimport StatsProvider from \"./context/stats/Provider\";\n\nconst AppCrew: FC = () => {\n  const STATS = useStats();\n  const NAVIGATION = useNavigation();\n  const dataCrew = STATS ? STATS.crew : [];\n  return (\n    <Row>\n      {dataCrew\n        .filter(crew => crew.key.replace(/-/g, \"\").includes(NAVIGATION.filter))\n        .map(crew => (\n          <Col key={crew.key} sm={6} md={4} lg={3}>\n            <CrewCard crew={crew} />\n          </Col>\n        ))}\n    </Row>\n  );\n};\n\nconst App = () => (\n  <Container className=\"App\">\n    <PlayerProvider>\n      <StatsProvider>\n        <AppCrew />\n      </StatsProvider>\n    </PlayerProvider>\n  </Container>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}